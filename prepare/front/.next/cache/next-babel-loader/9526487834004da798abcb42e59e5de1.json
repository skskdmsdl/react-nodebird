{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\workspace\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useRef, useEffect } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addPost } from '../reducers/post';\nimport useInput from \"../hooks/useInput\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var dispatch = useDispatch();\n  var imageInput = useRef();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText(''); // submit 시 inputText 초기화\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    dispatch(addPost(text)); // 원래 dispatch 자리에는 객체가 들어가는게 맞음\n  }, [text]); // 버튼 눌러서 사진 업로드창 띄우기\n\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  console.log(\"@@\", imagePaths);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": \"right\"\n    },\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(PostForm, \"vYBg+inL5UKdDrfu/t4+29s1VWM=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["E:/workspace/react-nodebird/prepare/front/components/PostForm.js"],"names":["React","useCallback","useRef","useEffect","Form","Input","Button","useSelector","useDispatch","addPost","useInput","PostForm","state","post","imagePaths","addPostDone","dispatch","imageInput","text","onChangeText","setText","onSubmit","onClickImageUpload","current","click","console","log","margin"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAAA,qBACiBJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAD5B;AAAA,MACXC,UADW,gBACXA,UADW;AAAA,MACCC,WADD,gBACCA,WADD;;AAEnB,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,MAAMS,UAAU,GAAGf,MAAM,EAAzB;;AAHmB,kBAImBQ,QAAQ,CAAC,EAAD,CAJ3B;AAAA;AAAA,MAIZQ,IAJY;AAAA,MAINC,YAJM;AAAA,MAIQC,OAJR;;AAMnBjB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGY,WAAH,EAAgB;AACZK,MAAAA,OAAO,CAAC,EAAD,CAAP,CADY,CACY;AAC3B;AACJ,GAJQ,EAIN,CAACL,WAAD,CAJM,CAAT;AAMA,MAAMM,QAAQ,GAAGpB,WAAW,CAAC,YAAM;AAC/Be,IAAAA,QAAQ,CAACP,OAAO,CAACS,IAAD,CAAR,CAAR,CAD+B,CACD;AACjC,GAF2B,EAEzB,CAACA,IAAD,CAFyB,CAA5B,CAZmB,CAgBnB;;AACA,MAAMI,kBAAkB,GAAGrB,WAAW,CAAC,YAAM;AACzCgB,IAAAA,UAAU,CAACM,OAAX,CAAmBC,KAAnB;AACH,GAFqC,EAEnC,CAACP,UAAU,CAACM,OAAZ,CAFmC,CAAtC;AAGAE,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBZ,UAAlB;AAEA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEa,MAAAA,MAAM,EAAE;AAAV,KAAb;AAAwC,IAAA,OAAO,EAAC,qBAAhD;AAAsE,IAAA,QAAQ,EAAEN,QAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AACI,IAAA,KAAK,EAAEH,IADX;AAEI,IAAA,QAAQ,EAAEC,YAFd;AAGI,IAAA,SAAS,EAAE,GAHf;AAII,IAAA,WAAW,EAAC,wEAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,MAA3B;AAA4B,IAAA,MAAM,MAAlC;AAAmC,IAAA,GAAG,EAAEF,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEK,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFJ,EAGI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,EAAE;AAAE,eAAO;AAAT,KAA9B;AAAkD,IAAA,QAAQ,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CAPJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ;AAyBH,CA/CD;;GAAMX,Q;UACkCJ,W,EACnBC,W,EAEqBE,Q;;;KAJpCC,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React, { useCallback, useRef, useEffect } from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addPost } from '../reducers/post';\r\nimport useInput from \"../hooks/useInput\";\r\n\r\nconst PostForm = () => {\r\n    const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n    const dispatch = useDispatch();\r\n    const imageInput = useRef();\r\n    const [text, onChangeText, setText] = useInput('');\r\n\r\n    useEffect(() => {\r\n        if(addPostDone) {\r\n            setText('');            // submit 시 inputText 초기화\r\n        }\r\n    }, [addPostDone]);\r\n\r\n    const onSubmit = useCallback(() => {\r\n        dispatch(addPost(text));      // 원래 dispatch 자리에는 객체가 들어가는게 맞음\r\n    }, [text]);\r\n\r\n    // 버튼 눌러서 사진 업로드창 띄우기\r\n    const onClickImageUpload = useCallback(() => {\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n    console.log(\"@@\", imagePaths);\r\n\r\n    return (\r\n        <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n            <Input.TextArea\r\n                value={text} \r\n                onChange={onChangeText}\r\n                maxLength={140}\r\n                placeholder=\"어떤 신기한 일이 있었나요?\"\r\n            />\r\n            <div>\r\n                <input type=\"file\" multiple hidden ref={imageInput} />\r\n                <Button onClick={onClickImageUpload} >이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">짹짹</Button>\r\n            </div>\r\n            <div>\r\n                {/* {imagePaths.map((v) => (\r\n                    <div key={v} style={{ display: 'inline-block' }}>\r\n                        <img src={v} style={{ width: '200px' }} alt={v} />\r\n                        <div>\r\n                            <Button>제거</Button>\r\n                        </div>\r\n                    </div>\r\n                ))} */}\r\n            </div>\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}