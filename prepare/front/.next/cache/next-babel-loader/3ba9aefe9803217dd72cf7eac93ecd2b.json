{"ast":null,"code":"import produce from '../util/produce';\nexport const initialState = {\n  loadUserLoading: false,\n  // 유저정보 가져오기 시도중\n  loadUserDone: false,\n  loadUserError: null,\n  followLoading: false,\n  // 팔로우 시도중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  // 언팔로우 시도중\n  unfollowDone: false,\n  unfollowError: null,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  loadFollowingsLoading: false,\n  loadFollowingsDone: false,\n  loadFollowingsError: null,\n  loadFollowersLoading: false,\n  loadFollowersDone: false,\n  loadFollowersError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME'; // const dummyUser = (data) => ({\n//   ...data,\n//   nickname: 'kimgo',\n//   id: 1,\n//   Posts: [{ id: 1 }],\n//   Followings: [{ nickname: '권정열' }, { nickname: '박보검' }, { nickname: '아이유' }],\n//   Followers: [{ nickname: '권정열' }, { nickname: '박보검' }, { nickname: '아이유' }],\n// });\n// action creator\n\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n});\nexport const logoutRequestAction = () => ({\n  type: LOG_OUT_REQUEST\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_FOLLOWINGS_REQUEST:\n      draft.loadFollowingsLoading = true;\n      draft.loadFollowingsError = null;\n      draft.loadFollowingsDone = false;\n      break;\n\n    case LOAD_FOLLOWINGS_SUCCESS:\n      draft.loadFollowingsLoading = false;\n      draft.me.Followings = action.data;\n      draft.loadFollowingsDone = true;\n      break;\n\n    case LOAD_FOLLOWINGS_FAILURE:\n      draft.loadFollowingsLoading = false;\n      draft.loadFollowingsError = action.error;\n      break;\n\n    case LOAD_FOLLOWERS_REQUEST:\n      draft.loadFollowersLoading = true;\n      draft.loadFollowersError = null;\n      draft.loadFollowersDone = false;\n      break;\n\n    case LOAD_FOLLOWERS_SUCCESS:\n      draft.loadFollowersLoading = false;\n      draft.me.Followers = action.data;\n      draft.loadFollowersDone = true;\n      break;\n\n    case LOAD_FOLLOWERS_FAILURE:\n      draft.loadFollowersLoading = false;\n      draft.loadFollowersError = action.error;\n      break;\n\n    case LOAD_USER_REQUEST:\n      draft.loadUserLoading = true;\n      draft.loadUserError = null;\n      draft.loadUserDone = false;\n      break;\n\n    case LOAD_USER_SUCCESS:\n      draft.loadUserLoading = false;\n      draft.me = action.data;\n      draft.loadUserDone = true;\n      break;\n\n    case LOAD_USER_FAILURE:\n      draft.loadUserLoading = false;\n      draft.loadUserError = action.error;\n      break;\n\n    case FOLLOW_REQUEST:\n      draft.followLoading = true;\n      draft.followError = null;\n      draft.followDone = false;\n      break;\n\n    case FOLLOW_SUCCESS:\n      draft.followLoading = false;\n      draft.me.Followings.push({\n        id: action.data.UserId\n      });\n      draft.followDone = true;\n      break;\n\n    case FOLLOW_FAILURE:\n      draft.followLoading = false;\n      draft.followError = action.error;\n      break;\n\n    case UNFOLLOW_REQUEST:\n      draft.unfollowLoading = true;\n      draft.unfollowError = null;\n      draft.unfollowDone = false;\n      break;\n\n    case UNFOLLOW_SUCCESS:\n      draft.unfollowLoading = false;\n      draft.me.Followings = draft.me.Followings.filter(v => v.id !== action.data.UserId);\n      draft.unfollowDone = true;\n      break;\n\n    case UNFOLLOW_FAILURE:\n      draft.unfollowLoading = false;\n      draft.unfollowError = action.error;\n      break;\n\n    case LOG_IN_REQUEST:\n      // 3개 다 초기화\n      draft.logInLoading = true;\n      draft.logInError = null;\n      draft.logInDone = false;\n      break;\n\n    case LOG_IN_SUCCESS:\n      // loading 끄고 Done true\n      draft.logInLoading = false;\n      draft.me = action.data;\n      draft.logInDone = true;\n      break;\n\n    case LOG_IN_FAILURE:\n      // loading 끄고 error 넣어주기\n      draft.logInLoading = false;\n      draft.logInError = action.error;\n      break;\n\n    case LOG_OUT_REQUEST:\n      draft.logOutLoading = true;\n      draft.logOutError = null;\n      draft.logOutDone = false;\n      break;\n\n    case LOG_OUT_SUCCESS:\n      draft.logOutLoading = false;\n      draft.logOutDone = true;\n      draft.me = null;\n      break;\n\n    case LOG_OUT_FAILURE:\n      draft.logOutLoading = false;\n      draft.logOutError = action.error;\n      break;\n\n    case SIGN_UP_REQUEST:\n      draft.signUpLoading = true;\n      draft.signUpError = null;\n      draft.signUpDone = false;\n      break;\n\n    case SIGN_UP_SUCCESS:\n      draft.signUpLoading = false;\n      draft.signUpDone = true;\n      break;\n\n    case SIGN_UP_FAILURE:\n      draft.signUpLoading = false;\n      draft.signUpError = action.error;\n      break;\n\n    case CHANGE_NICKNAME_REQUEST:\n      draft.changeNicknameLoading = true;\n      draft.changeNicknameError = null;\n      draft.changeNicknameDone = false;\n      break;\n\n    case CHANGE_NICKNAME_SUCCESS:\n      draft.me.nickname = action.data.nickname;\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameDone = true;\n      break;\n\n    case CHANGE_NICKNAME_FAILURE:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameError = action.error;\n      break;\n\n    case ADD_POST_TO_ME:\n      draft.me.Posts.unshift({\n        id: action.data\n      });\n      break;\n    // return {\n    //   ...state,\n    //   me: {\n    //     ...state.me,\n    //     Posts: [{ id: action.data }, ...state.me.Posts],\n    //   },\n    // };\n\n    case REMOVE_POST_OF_ME:\n      draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data); // 나중에 성능 문제생기면 unshift로!\n\n      break;\n    // return {\n    //   ...state,\n    //   me: {\n    //     ...state.me,\n    //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\n    //   },\n    // };\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["D:/euni/workspaces/react_nodebird/react-nodebird/prepare/front/reducers/user.js"],"names":["produce","initialState","loadUserLoading","loadUserDone","loadUserError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","loadFollowersLoading","loadFollowersDone","loadFollowersError","me","signUpData","loginData","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","draft","Followings","error","Followers","push","id","UserId","filter","v","nickname","Posts","unshift"],"mappings":"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","sourcesContent":["import produce from '../util/produce';\r\n\r\nexport const initialState = {\r\n  loadUserLoading: false, // 유저정보 가져오기 시도중\r\n  loadUserDone: false,\r\n  loadUserError: null,\r\n  followLoading: false, // 팔로우 시도중\r\n  followDone: false,\r\n  followError: null,\r\n  unfollowLoading: false, // 언팔로우 시도중\r\n  unfollowDone: false,\r\n  unfollowError: null,\r\n  logInLoading: false, // 로그인 시도중\r\n  logInDone: false,\r\n  logInError: null,\r\n  logOutLoading: false, // 로그아웃 시도중\r\n  logOutDone: false,\r\n  logOutError: null,\r\n  signUpLoading: false, // 회원가입 시도중\r\n  signUpDone: false,\r\n  signUpError: null,\r\n  changeNicknameLoading: false, // 닉네임 변경 시도중\r\n  changeNicknameDone: false,\r\n  changeNicknameError: null,\r\n  loadFollowingsLoading: false,\r\n  loadFollowingsDone: false,\r\n  loadFollowingsError: null,\r\n  loadFollowersLoading: false,\r\n  loadFollowersDone: false,\r\n  loadFollowersError: null,\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\n// const dummyUser = (data) => ({\r\n//   ...data,\r\n//   nickname: 'kimgo',\r\n//   id: 1,\r\n//   Posts: [{ id: 1 }],\r\n//   Followings: [{ nickname: '권정열' }, { nickname: '박보검' }, { nickname: '아이유' }],\r\n//   Followers: [{ nickname: '권정열' }, { nickname: '박보검' }, { nickname: '아이유' }],\r\n// });\r\n\r\n// action creator\r\nexport const loginRequestAction = (data) => ({\r\n  type: LOG_IN_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const logoutRequestAction = () => ({\r\n  type: LOG_OUT_REQUEST,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case LOAD_FOLLOWINGS_REQUEST:\r\n      draft.loadFollowingsLoading = true;\r\n      draft.loadFollowingsError = null;\r\n      draft.loadFollowingsDone = false;\r\n      break;\r\n    case LOAD_FOLLOWINGS_SUCCESS:\r\n      draft.loadFollowingsLoading = false;\r\n      draft.me.Followings = action.data;\r\n      draft.loadFollowingsDone = true;\r\n      break;\r\n    case LOAD_FOLLOWINGS_FAILURE:\r\n      draft.loadFollowingsLoading = false;\r\n      draft.loadFollowingsError = action.error;\r\n      break;\r\n    case LOAD_FOLLOWERS_REQUEST:\r\n      draft.loadFollowersLoading = true;\r\n      draft.loadFollowersError = null;\r\n      draft.loadFollowersDone = false;\r\n      break;\r\n    case LOAD_FOLLOWERS_SUCCESS:\r\n      draft.loadFollowersLoading = false;\r\n      draft.me.Followers = action.data;\r\n      draft.loadFollowersDone = true;\r\n      break;\r\n    case LOAD_FOLLOWERS_FAILURE:\r\n      draft.loadFollowersLoading = false;\r\n      draft.loadFollowersError = action.error;\r\n      break;\r\n    case LOAD_USER_REQUEST:\r\n      draft.loadUserLoading = true;\r\n      draft.loadUserError = null;\r\n      draft.loadUserDone = false;\r\n      break;\r\n    case LOAD_USER_SUCCESS:\r\n      draft.loadUserLoading = false;\r\n      draft.me = action.data;\r\n      draft.loadUserDone = true;\r\n      break;\r\n    case LOAD_USER_FAILURE:\r\n      draft.loadUserLoading = false;\r\n      draft.loadUserError = action.error;\r\n      break;\r\n    case FOLLOW_REQUEST:\r\n      draft.followLoading = true;\r\n      draft.followError = null;\r\n      draft.followDone = false;\r\n      break;\r\n    case FOLLOW_SUCCESS:\r\n      draft.followLoading = false;\r\n      draft.me.Followings.push({ id: action.data.UserId });\r\n      draft.followDone = true;\r\n      break;\r\n    case FOLLOW_FAILURE:\r\n      draft.followLoading = false;\r\n      draft.followError = action.error;\r\n      break;\r\n    case UNFOLLOW_REQUEST:\r\n      draft.unfollowLoading = true;\r\n      draft.unfollowError = null;\r\n      draft.unfollowDone = false;\r\n      break;\r\n    case UNFOLLOW_SUCCESS:\r\n      draft.unfollowLoading = false;\r\n      draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data.UserId);\r\n      draft.unfollowDone = true;\r\n      break;\r\n    case UNFOLLOW_FAILURE:\r\n      draft.unfollowLoading = false;\r\n      draft.unfollowError = action.error;\r\n      break;\r\n    case LOG_IN_REQUEST: // 3개 다 초기화\r\n      draft.logInLoading = true;\r\n      draft.logInError = null;\r\n      draft.logInDone = false;\r\n      break;\r\n    case LOG_IN_SUCCESS: // loading 끄고 Done true\r\n      draft.logInLoading = false;\r\n      draft.me = action.data;\r\n      draft.logInDone = true;\r\n      break;\r\n    case LOG_IN_FAILURE: // loading 끄고 error 넣어주기\r\n      draft.logInLoading = false;\r\n      draft.logInError = action.error;\r\n      break;\r\n    case LOG_OUT_REQUEST:\r\n      draft.logOutLoading = true;\r\n      draft.logOutError = null;\r\n      draft.logOutDone = false;\r\n      break;\r\n    case LOG_OUT_SUCCESS:\r\n      draft.logOutLoading = false;\r\n      draft.logOutDone = true;\r\n      draft.me = null;\r\n      break;\r\n    case LOG_OUT_FAILURE:\r\n      draft.logOutLoading = false;\r\n      draft.logOutError = action.error;\r\n      break;\r\n    case SIGN_UP_REQUEST:\r\n      draft.signUpLoading = true;\r\n      draft.signUpError = null;\r\n      draft.signUpDone = false;\r\n      break;\r\n    case SIGN_UP_SUCCESS:\r\n      draft.signUpLoading = false;\r\n      draft.signUpDone = true;\r\n      break;\r\n    case SIGN_UP_FAILURE:\r\n      draft.signUpLoading = false;\r\n      draft.signUpError = action.error;\r\n      break;\r\n    case CHANGE_NICKNAME_REQUEST:\r\n      draft.changeNicknameLoading = true;\r\n      draft.changeNicknameError = null;\r\n      draft.changeNicknameDone = false;\r\n      break;\r\n    case CHANGE_NICKNAME_SUCCESS:\r\n      draft.me.nickname = action.data.nickname;\r\n      draft.changeNicknameLoading = false;\r\n      draft.changeNicknameDone = true;\r\n      break;\r\n    case CHANGE_NICKNAME_FAILURE:\r\n      draft.changeNicknameLoading = false;\r\n      draft.changeNicknameError = action.error;\r\n      break;\r\n    case ADD_POST_TO_ME:\r\n      draft.me.Posts.unshift({ id: action.data });\r\n      break;\r\n      // return {\r\n      //   ...state,\r\n      //   me: {\r\n      //     ...state.me,\r\n      //     Posts: [{ id: action.data }, ...state.me.Posts],\r\n      //   },\r\n      // };\r\n    case REMOVE_POST_OF_ME:\r\n      draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data); // 나중에 성능 문제생기면 unshift로!\r\n      break;\r\n      // return {\r\n      //   ...state,\r\n      //   me: {\r\n      //     ...state.me,\r\n      //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n      //   },\r\n      // };\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}