{"ast":null,"code":"import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'ADD_POST_SUCCESS' // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE' // data: err.response.data,\n\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost, 2000);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["E:/workspace/react-nodebird/prepare/front/sagas/post.js"],"names":["all","fork","takeLatest","put","delay","axios","addPostAPI","data","post","addPost","action","type","err","watchAddPost","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAG;AACC;AACA,UAAMN,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,kBADA,CAEN;;AAFM,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOC,GAAP,EAAY;AACV,UAAMT,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,kBADA,CAEN;;AAFM,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUE,YAAV,GAAyB;AACrB,QAAMX,UAAU,CAAC,kBAAD,EAAqBO,OAArB,EAA8B,IAA9B,CAAhB;AACH;;AAED,eAAe,UAAUK,QAAV,GAAqB;AAChC,QAAMd,GAAG,CAAC,CACNC,IAAI,CAACY,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nfunction addPostAPI(data) {                  \r\n    return axios.post('/api/post', data);    \r\n}\r\n\r\nfunction* addPost(action) {\r\n    try{\r\n        // const result = yield call(addPostAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: 'ADD_POST_SUCCESS',\r\n            // data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: 'ADD_POST_FAILURE',\r\n            // data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest('ADD_POST_REQUEST', addPost, 2000);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}