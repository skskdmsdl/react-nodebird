{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\n\nvar FollowButton = function FollowButton(_ref) {\n  var post = _ref.post;\n  var dispatch = useDispatch(); // 내 정보 리덕스에서 가져오기\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      followLoading = _useSelector.followLoading,\n      unfollowLoading = _useSelector.unfollowLoading;\n\n  var isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(function (v) {\n    return v.id === post.User.id;\n  });\n  var onClickButton = useCallback(function () {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n\n  if (post.User.id === me.id) {\n    return null;\n  }\n\n  return __jsx(Button, {\n    loading: followLoading || unfollowLoading,\n    onClick: onClickButton\n  }, isFollowing ? '언팔로우' : '팔로우');\n};\n\nexport default FollowButton;","map":{"version":3,"sources":["D:/euni/workspaces/react_nodebird/react-nodebird/prepare/front/components/FollowButton.js"],"names":["React","useCallback","Button","useSelector","useDispatch","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowButton","post","dispatch","state","user","me","followLoading","unfollowLoading","isFollowing","Followings","find","v","id","User","onClickButton","type","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,QAAuB,MAAvB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,kBAAjD;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACjC,MAAMC,QAAQ,GAAGL,WAAW,EAA5B,CADiC,CAEjC;;AAFiC,qBAGcD,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAHzB;AAAA,MAGzBC,EAHyB,gBAGzBA,EAHyB;AAAA,MAGrBC,aAHqB,gBAGrBA,aAHqB;AAAA,MAGNC,eAHM,gBAGNA,eAHM;;AAIjC,MAAMC,WAAW,GAAGH,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEI,UAAJ,CAAeC,IAAf,CAAoB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACC,EAAF,KAASX,IAAI,CAACY,IAAL,CAAUD,EAA1B;AAAA,GAApB,CAApB;AACA,MAAME,aAAa,GAAGpB,WAAW,CAAC,YAAM;AACtC,QAAIc,WAAJ,EAAiB;AACfN,MAAAA,QAAQ,CAAC;AACPa,QAAAA,IAAI,EAAEhB,gBADC;AAEPiB,QAAAA,IAAI,EAAEf,IAAI,CAACY,IAAL,CAAUD;AAFT,OAAD,CAAR;AAID,KALD,MAKO;AACLV,MAAAA,QAAQ,CAAC;AACPa,QAAAA,IAAI,EAAEjB,cADC;AAEPkB,QAAAA,IAAI,EAAEf,IAAI,CAACY,IAAL,CAAUD;AAFT,OAAD,CAAR;AAID;AACF,GAZgC,EAY9B,CAACJ,WAAD,CAZ8B,CAAjC;;AAcA,MAAIP,IAAI,CAACY,IAAL,CAAUD,EAAV,KAAiBP,EAAE,CAACO,EAAxB,EAA4B;AAC1B,WAAO,IAAP;AACD;;AAED,SACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN,aAAa,IAAIC,eAAlC;AAAmD,IAAA,OAAO,EAAEO;AAA5D,KACGN,WAAW,GAAG,MAAH,GAAY,KAD1B,CADF;AAKD,CA5BD;;AAkCA,eAAeR,YAAf","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\r\n\r\nconst FollowButton = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  // 내 정보 리덕스에서 가져오기\r\n  const { me, followLoading, unfollowLoading } = useSelector((state) => state.user);\r\n  const isFollowing = me?.Followings.find((v) => v.id === post.User.id);\r\n  const onClickButton = useCallback(() => {\r\n    if (isFollowing) {\r\n      dispatch({\r\n        type: UNFOLLOW_REQUEST,\r\n        data: post.User.id,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: FOLLOW_REQUEST,\r\n        data: post.User.id,\r\n      });\r\n    }\r\n  }, [isFollowing]);\r\n\r\n  if (post.User.id === me.id) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Button loading={followLoading || unfollowLoading} onClick={onClickButton}>\r\n      {isFollowing ? '언팔로우' : '팔로우'}\r\n    </Button>\r\n  );\r\n};\r\n\r\nFollowButton.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FollowButton;\r\n"]},"metadata":{},"sourceType":"module"}