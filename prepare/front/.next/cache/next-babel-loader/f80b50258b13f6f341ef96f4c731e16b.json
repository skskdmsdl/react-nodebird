{"ast":null,"code":"import { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post'; // action creator\n// const changeNickname = (data) => {\n//     return {\n//         type: 'CHANGE_NICKNAME',\n//         data,\n//     }\n// }\n// (이전상태, 액션) => 다음상태\n// 리듀서는 이전상태와 액션을 통해 다음상태를 만들어내는 함수\n// const rootReducer = combineReducers({\n//   // server side rendering을 위해 index 추가\n//   index: (state = {}, action) => {\n//     switch (action.type) {\n//       case HYDRATE:\n//         console.log('HYDRATE', action);\n//         return { ...state, ...action.payload };\n//       default:\n//         return state;\n//     }\n//   },\n//   user,\n//   post,\n// });\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return action.payload;\n\n    default:\n      {\n        const combinedReducer = combineReducers({\n          user,\n          post\n        });\n        return combinedReducer(state, action);\n      }\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["D:/euni/workspaces/react_nodebird/react-nodebird/prepare/front/reducers/index.js"],"names":["HYDRATE","combineReducers","user","post","rootReducer","state","action","type","console","log","payload","combinedReducer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,OAAL;AACEQ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,aAAOA,MAAM,CAACI,OAAd;;AACF;AAAS;AACP,cAAMC,eAAe,GAAGV,eAAe,CAAC;AACtCC,UAAAA,IADsC;AAEtCC,UAAAA;AAFsC,SAAD,CAAvC;AAIA,eAAOQ,eAAe,CAACN,KAAD,EAAQC,MAAR,CAAtB;AACD;AAVH;AAYD,CAbD;;AAeA,eAAeF,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport user from './user';\r\nimport post from './post';\r\n\r\n// action creator\r\n// const changeNickname = (data) => {\r\n//     return {\r\n//         type: 'CHANGE_NICKNAME',\r\n//         data,\r\n//     }\r\n// }\r\n\r\n// (이전상태, 액션) => 다음상태\r\n// 리듀서는 이전상태와 액션을 통해 다음상태를 만들어내는 함수\r\n// const rootReducer = combineReducers({\r\n//   // server side rendering을 위해 index 추가\r\n//   index: (state = {}, action) => {\r\n//     switch (action.type) {\r\n//       case HYDRATE:\r\n//         console.log('HYDRATE', action);\r\n//         return { ...state, ...action.payload };\r\n//       default:\r\n//         return state;\r\n//     }\r\n//   },\r\n//   user,\r\n//   post,\r\n// });\r\n\r\nconst rootReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case HYDRATE:\r\n      console.log('HYDRATE', action);\r\n      return action.payload;\r\n    default: {\r\n      const combinedReducer = combineReducers({\r\n        user,\r\n        post,\r\n      });\r\n      return combinedReducer(state, action);\r\n    }\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}