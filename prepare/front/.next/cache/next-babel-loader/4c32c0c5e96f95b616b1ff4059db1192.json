{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _this = this,\n    _jsxFileName = \"D:\\\\euni\\\\workspaces\\\\react_nodebird\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { loginRequestAction } from '../reducers/user';\nvar ButtonWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    margin-top: 10px;\\n\"])));\n_c = ButtonWrapper;\nvar FormWrapper = styled(Form)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    padding: 10px;\\n\"])));\n_c2 = FormWrapper;\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      logInloading = _useSelector.logInloading;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1]; // const [id, setId] = useState('');\n  // // 컴포넌트에 props로 넘겨주는 함수는 useCallback을 꼭 써라! 👉 그래야 최적화 됨\n  // const onChangeId = useCallback((e) => {\n  //     setId(e.target.value);\n  // }, []);\n  // const style = useMemo(() => ({ marginTop: 10 }), []);\n\n\n  var onSubmitFrom = useCallback(function () {\n    console.log(email, password);\n    dispatch(loginRequestAction({\n      email: email,\n      password: password\n    }));\n  }, [email, password]);\n  return (// onFinish는 자동으로 e.preventDefault()가 적용이 되어 있음(ant-design)\n    __jsx(FormWrapper, {\n      onFinish: onSubmitFrom,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"\\uC774\\uBA54\\uC77C\"), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), __jsx(Input, {\n      name: \"user-email\",\n      type: \"email\",\n      value: email,\n      onChange: onChangeEmail,\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    })), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), __jsx(Input, {\n      name: \"user-password\",\n      type: \"password\",\n      value: password,\n      onChange: onChangePassword,\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    })), __jsx(ButtonWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, __jsx(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      loading: logInloading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n      href: \"/signup\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 30\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))))\n  );\n}; // LoginForm.propTypes = {\n//     setIsLoggedIn: PropTypes.func.isRequired,\n// }\n\n\n_s(LoginForm, \"513r1tWM6gyGr8Qx1xcV55uKAGg=\", false, function () {\n  return [useDispatch, useSelector, useInput, useInput];\n});\n\n_c3 = LoginForm;\nexport default LoginForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"FormWrapper\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"sources":["D:/euni/workspaces/react_nodebird/react-nodebird/prepare/front/components/LoginForm.js"],"names":["React","useState","useCallback","useMemo","Form","Input","Button","Link","styled","useDispatch","useSelector","useInput","loginRequestAction","ButtonWrapper","div","FormWrapper","LoginForm","dispatch","state","user","logInloading","email","onChangeEmail","password","onChangePassword","onSubmitFrom","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport Link from 'next/link';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport useInput from '../hooks/useInput';\r\nimport { loginRequestAction } from '../reducers/user';\r\n\r\nconst ButtonWrapper = styled.div`\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst FormWrapper = styled(Form)`\r\n    padding: 10px;\r\n`;\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { logInloading } = useSelector((state) => state.user);\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n\r\n  // const [id, setId] = useState('');\r\n  // // 컴포넌트에 props로 넘겨주는 함수는 useCallback을 꼭 써라! 👉 그래야 최적화 됨\r\n  // const onChangeId = useCallback((e) => {\r\n  //     setId(e.target.value);\r\n  // }, []);\r\n\r\n  // const style = useMemo(() => ({ marginTop: 10 }), []);\r\n\r\n  const onSubmitFrom = useCallback(() => {\r\n    console.log(email, password);\r\n    dispatch(loginRequestAction({ email, password }));\r\n  }, [email, password]);\r\n\r\n  return (\r\n    // onFinish는 자동으로 e.preventDefault()가 적용이 되어 있음(ant-design)\r\n    <FormWrapper onFinish={onSubmitFrom}>\r\n      <div>\r\n        <label htmlFor=\"user-email\">이메일</label>\r\n        <br />\r\n        <Input name=\"user-email\" type=\"email\" value={email} onChange={onChangeEmail} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"user-password\">비밀번호</label>\r\n        <br />\r\n        <Input\r\n          name=\"user-password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={onChangePassword}\r\n          required\r\n        />\r\n      </div>\r\n      <ButtonWrapper>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={logInloading}>로그인</Button>\r\n        <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\r\n      </ButtonWrapper>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\n// LoginForm.propTypes = {\r\n//     setIsLoggedIn: PropTypes.func.isRequired,\r\n// }\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}