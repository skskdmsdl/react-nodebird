{"ast":null,"code":"var _jsxFileName = \"E:\\\\workspace\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport useInput from '../hooks/useInput';\n\nconst CommentForm = ({\n  post\n}) => {\n  // custom hook사용으로 useState와 useCallback 조합해서 사용하던걸 줄일 수 있음\n  const [commentText, onChangeCommentText] = useInput('');\n  const onSubmitComment = useCallback(() => {}, [commentText]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    conChange: onChangeCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\nexport default CommentForm;","map":{"version":3,"sources":["E:/workspace/react-nodebird/prepare/front/components/CommentForm.js"],"names":["React","useCallback","Form","Input","Button","useInput","CommentForm","post","commentText","onChangeCommentText","onSubmitComment"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B;AACA,QAAM,CAACC,WAAD,EAAcC,mBAAd,IAAqCJ,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAMK,eAAe,GAAGT,WAAW,CAAC,MAAM,CAEzC,CAFkC,EAEhC,CAACO,WAAD,CAFgC,CAAnC;AAGA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEF,WAAvB;AAAoC,IAAA,SAAS,EAAEC,mBAA/C;AAAoE,IAAA,IAAI,EAAE,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ,CADJ;AAQH,CAdD;;AAgBA,eAAeH,WAAf","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst CommentForm = ({ post }) => {\r\n    // custom hook사용으로 useState와 useCallback 조합해서 사용하던걸 줄일 수 있음\r\n    const [commentText, onChangeCommentText] = useInput('');\r\n    const onSubmitComment = useCallback(() => {\r\n\r\n    }, [commentText]);\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item>\r\n                <Input.TextArea value={commentText} conChange={onChangeCommentText} rows={4} />\r\n                <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}