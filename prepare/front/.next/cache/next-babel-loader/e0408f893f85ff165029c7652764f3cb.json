{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Button, Checkbox, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { LOAD_MY_INFO_REQUEST, SIGN_UP_REQUEST } from '../reducers/user';\nimport useInput from '../hooks/useInput';\nimport AppLayout from '../components/AppLayout';\nimport wrapper from '../store/configureStore';\n\nconst Signup = () => {\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: term,\n    1: setTerm\n  } = useState(false);\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const [email, onChangeEmail] = useInput('');\n  const [nick, onChangeNick] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const dispatch = useDispatch();\n  const {\n    me,\n    signUpDone,\n    signUpError,\n    signUpLoading\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (me && me.id) {\n      Router.replace('/');\n    }\n  }, [me && me.id]);\n  useEffect(() => {\n    if (signUpDone) {\n      Router.replace('/');\n    }\n  }, [signUpDone]);\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  const onSubmit = useCallback(() => {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    return dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email,\n        password,\n        nickname: nick\n      }\n    });\n  }, [email, nick, password, passwordCheck, term]);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  const onChangeTerm = useCallback(e => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  return __jsx(AppLayout, null, __jsx(Head, null, __jsx(\"title\", null, \"\\uD68C\\uC6D0\\uAC00\\uC785 | NodeBird\")), __jsx(Form, {\n    onFinish: onSubmit,\n    style: {\n      padding: 10\n    }\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-email\"\n  }, \"\\uC774\\uBA54\\uC77C\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-email\",\n    value: email,\n    required: true,\n    onChange: onChangeEmail\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-nick\"\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password-check\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(\"div\", null, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm\n  }, \"\\uC81C\\uB85C\\uCD08 \\uB9D0\\uC744 \\uC798 \\uB4E4\\uC744 \\uAC83\\uC744 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: signUpLoading\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  console.log('getServerSideProps start');\n  console.log(context.req.headers);\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  console.log('getServerSideProps end');\n  await context.store.sagaTask.toPromise();\n});\nexport default Signup;","map":{"version":3,"sources":["D:/euni/workspaces/react_nodebird/react-nodebird/prepare/front/pages/signup.js"],"names":["React","useCallback","useState","useEffect","Button","Checkbox","Form","Input","useDispatch","useSelector","Head","Router","axios","END","LOAD_MY_INFO_REQUEST","SIGN_UP_REQUEST","useInput","AppLayout","wrapper","Signup","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","email","onChangeEmail","nick","onChangeNick","password","onChangePassword","dispatch","me","signUpDone","signUpError","signUpLoading","state","user","id","replace","alert","onSubmit","type","data","nickname","onChangePasswordCheck","e","target","value","onChangeTerm","checked","padding","color","marginTop","getServerSideProps","context","console","log","req","headers","cookie","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport { Button, Checkbox, Form, Input } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Head from 'next/head';\r\nimport Router from 'next/router';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\n\r\nimport { LOAD_MY_INFO_REQUEST, SIGN_UP_REQUEST } from '../reducers/user';\r\nimport useInput from '../hooks/useInput';\r\nimport AppLayout from '../components/AppLayout';\r\nimport wrapper from '../store/configureStore';\r\n\r\nconst Signup = () => {\r\n  const [passwordCheck, setPasswordCheck] = useState('');\r\n  const [term, setTerm] = useState(false);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [termError, setTermError] = useState(false);\r\n\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [nick, onChangeNick] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const dispatch = useDispatch();\r\n  const { me, signUpDone, signUpError, signUpLoading } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (me && me.id) {\r\n      Router.replace('/');\r\n    }\r\n  }, [me && me.id]);\r\n\r\n  useEffect(() => {\r\n    if (signUpDone) {\r\n      Router.replace('/');\r\n    }\r\n  }, [signUpDone]);\r\n\r\n  useEffect(() => {\r\n    if (signUpError) {\r\n      alert(signUpError);\r\n    }\r\n  }, [signUpError]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    if (password !== passwordCheck) {\r\n      return setPasswordError(true);\r\n    }\r\n    if (!term) {\r\n      return setTermError(true);\r\n    }\r\n    return dispatch({\r\n      type: SIGN_UP_REQUEST,\r\n      data: {\r\n        email,\r\n        password,\r\n        nickname: nick,\r\n      },\r\n    });\r\n  }, [email, nick, password, passwordCheck, term]);\r\n\r\n  const onChangePasswordCheck = useCallback((e) => {\r\n    setPasswordError(e.target.value !== password);\r\n    setPasswordCheck(e.target.value);\r\n  }, [password]);\r\n\r\n  const onChangeTerm = useCallback((e) => {\r\n    setTermError(false);\r\n    setTerm(e.target.checked);\r\n  }, []);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Head>\r\n        <title>회원가입 | NodeBird</title>\r\n      </Head>\r\n      <Form onFinish={onSubmit} style={{ padding: 10 }}>\r\n        <div>\r\n          <label htmlFor=\"user-email\">이메일</label>\r\n          <br />\r\n          <Input name=\"user-email\" value={email} required onChange={onChangeEmail} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-nick\">닉네임</label>\r\n          <br />\r\n          <Input name=\"user-nick\" value={nick} required onChange={onChangeNick} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-password\">비밀번호</label>\r\n          <br />\r\n          <Input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassword} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n          <br />\r\n          <Input\r\n            name=\"user-password-check\"\r\n            type=\"password\"\r\n            value={passwordCheck}\r\n            required\r\n            onChange={onChangePasswordCheck}\r\n          />\r\n          {passwordError && <div style={{ color: 'red' }}>비밀번호가 일치하지 않습니다.</div>}\r\n        </div>\r\n        <div>\r\n          <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n          {termError && <div style={{ color: 'red' }}>약관에 동의하셔야 합니다.</div>}\r\n        </div>\r\n        <div style={{ marginTop: 10 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={signUpLoading}>가입하기</Button>\r\n        </div>\r\n      </Form>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  console.log('getServerSideProps start');\r\n  console.log(context.req.headers);\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  console.log('getServerSideProps end');\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}