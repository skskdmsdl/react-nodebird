{"ast":null,"code":"import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["E:/workspace/react-nodebird/prepare/front/sagas/post.js"],"names":["all","fork","takeLatest","put","delay","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAPI","data","post","addPost","action","type","err","error","response","addCommentAPI","postId","addComment","watchAddPost","watchAddComment","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,gBADJ,EACsBC,gBADtB,EACwCC,gBADxC,EAEIC,mBAFJ,EAEyBC,mBAFzB,EAE8CC,mBAF9C,QAGO,kBAHP;;AAKA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOR,KAAK,CAACS,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAG;AACC;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAEV,gBADA,CAEN;;AAFM,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOW,GAAP,EAAY;AACV,UAAMf,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAET,gBADA;AAENW,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,SAASQ,aAAT,CAAuBR,IAAvB,EAA6B;AACzB,SAAOR,KAAK,CAACS,IAAN,CAAY,aAAYD,IAAI,CAACS,MAAO,UAApC,EAA+CT,IAA/C,CAAP;AACH;;AAED,UAAUU,UAAV,CAAqBP,MAArB,EAA6B;AACzB,MAAG;AACC;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAEP,mBADA,CAEN;;AAFM,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOQ,GAAP,EAAY;AACV,UAAMf,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAEN,mBADA;AAENQ,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFd,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUW,YAAV,GAAyB;AACrB,QAAMtB,UAAU,CAACI,gBAAD,EAAmBS,OAAnB,CAAhB;AACH;;AAED,UAAUU,eAAV,GAA4B;AACxB,QAAMvB,UAAU,CAACO,mBAAD,EAAsBc,UAAtB,CAAhB;AACH;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAM1B,GAAG,CAAC,CACNC,IAAI,CAACuB,YAAD,CADE,EAENvB,IAAI,CAACwB,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { \r\n    ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n    ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\r\n} from '../reducers/post';\r\n\r\nfunction addPostAPI(data) {                  \r\n    return axios.post('/api/post', data);    \r\n}\r\n\r\nfunction* addPost(action) {\r\n    try{\r\n        // const result = yield call(addPostAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            // data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction addCommentAPI(data) {                  \r\n    return axios.post(`/api/post/${data.postId}/comment`, data);    \r\n}\r\n\r\nfunction* addComment(action) {\r\n    try{\r\n        // const result = yield call(addCommentAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            // data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}