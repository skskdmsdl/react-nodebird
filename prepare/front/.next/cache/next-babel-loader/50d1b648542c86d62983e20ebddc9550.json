{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nvar initialState = {\n  user: {},\n  post: {}\n}; // action creator\n// const changeNickname = (data) => {\n//     return {\n//         type: 'CHANGE_NICKNAME',\n//         data, \n//     }\n// }\n// (이전상태, 액션) => 다음상태\n// 리듀서는 이전상태와 액션을 통해 다음상태를 만들어내는 함수\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["E:/workspace/react-nodebird/prepare/front/reducers/index.js"],"names":["HYDRATE","initialState","user","post","rootReducer","state","action","type","console","log","payload","isLoggedIn","data"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAIjBC,EAAAA,IAAI,EAAE;AAJW,CAArB,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,OAAL;AACIQ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,6CAAYD,KAAZ,GAAsBC,MAAM,CAACI,OAA7B;;AACJ,SAAK,QAAL;AACI,6CACOL,KADP;AAEIH,QAAAA,IAAI,kCACGG,KAAK,CAACH,IADT;AAEAS,UAAAA,UAAU,EAAE,IAFZ;AAGAT,UAAAA,IAAI,EAAEI,MAAM,CAACM;AAHb;AAFR;;AAQJ,SAAK,SAAL;AACI,6CACOP,KADP;AAEIH,QAAAA,IAAI,kCACGG,KAAK,CAACH,IADT;AAEAS,UAAAA,UAAU,EAAE,KAFZ;AAGAT,UAAAA,IAAI,EAAE;AAHN;AAFR;;AAQJ;AACI,aAAOG,KAAP;AAvBR;AAyBH,CA1BD;;AA4BA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\r\n\r\nconst initialState = {\r\n    user: {\r\n     \r\n    },\r\n    post: {\r\n        \r\n    }\r\n};\r\n\r\n\r\n// action creator\r\n// const changeNickname = (data) => {\r\n//     return {\r\n//         type: 'CHANGE_NICKNAME',\r\n//         data, \r\n//     }\r\n// }\r\n\r\n// (이전상태, 액션) => 다음상태\r\n// 리듀서는 이전상태와 액션을 통해 다음상태를 만들어내는 함수\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case HYDRATE:\r\n            console.log('HYDRATE', action);\r\n            return { ...state, ...action.payload };\r\n        case 'LOG_IN':\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    isLoggedIn: true,\r\n                    user: action.data,\r\n                },\r\n            };\r\n        case 'LOG_OUT':\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    isLoggedIn: false,\r\n                    user: null,\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}